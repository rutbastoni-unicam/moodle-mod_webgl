{"version":3,"file":"unitygame.min.js","sources":["../src/unitygame.js"],"sourcesContent":["//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/messages/>.\nimport {call as fetchMany} from 'core/ajax';\nimport ModalEvents from 'core/modal_events';\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport * as CourseEvents from 'core_course/events';\nimport $ from 'jquery';\n\n/**\n * Handle progress game from Unity interface to Moodle\n *\n * @module     mod_webgl\n */\nwindow.mod_webgl_plugin = {\n    initted: false,\n    trackGameViewed: () => {},\n    trackGameProgress: () => {}\n};\n\n/**\n * @typedef {Object} ProgressData\n * @property {number} score - achieved game score\n * @property {number} completedLevels - number of completed game levels\n * @property {boolean} puzzleSolved - if the puzzle of this game has been solved\n */\n\nexport const init = () => {\n    const showGameCompleteDialog = async () => {\n        const modalbacktocourse = await ModalSaveCancel.create({\n            title: getString('gamecompletedialog', 'mod_webgl'),\n            body: getString('gamecompletedialogbody', 'mod_webgl'),\n            buttons: {\n                cancel: getString('gamecompletedialogcancel', 'mod_webgl'),\n                save: getString('gamecompletedialogsave', 'mod_webgl')\n            }\n        });\n\n        // Remove default click listener outside the modal that makes it close;\n        // we want the user explicitly click a button to confirm his choice\n        modalbacktocourse.getRoot().off('click');\n\n        modalbacktocourse.getRoot().on(ModalEvents.save, () => {\n            $('#mod_webgl_course_url').submit();\n        });\n        modalbacktocourse.show();\n    };\n\n    const handleCompletionData = async (completiondata) => {\n        // Replace activity completion info\n        const activityInfosBlock = $('.activity-information');\n        if (activityInfosBlock.length) {\n            const renderObject = await Templates.renderForPromise('core_course/activity_info', completiondata);\n            await Templates.replaceNode(activityInfosBlock[0], renderObject.html, renderObject.js);\n        }\n\n        if (completiondata.overallcomplete) {\n            showGameCompleteDialog();\n        }\n    };\n\n    /**\n     * Call to internal API to set this game as viewed\n     */\n    const setGameLoaded = async () => {\n        const webglid = $('.webgl-iframe-content-loader').data('webgl');\n\n        const response = await fetchMany([{\n            methodname: 'mod_webgl_signal_game_loaded',\n            args: {'webglid': webglid}\n        }])[0];\n\n        if (!response) {\n            window.console.error('Error setting webgl ' + webglid + ' as viewed');\n        } else {\n            handleCompletionData(response.completiondata);\n            window.console.log(response);\n        }\n\n    };\n\n    /**\n     *\n      * @param {ProgressData} progressData\n     * @returns {Promise<void>}\n     */\n    const setGameProgress = async (progressData) => {\n        const webglid = $('.webgl-iframe-content-loader').data('webgl');\n        window.console.log('Setting progress data object');\n        window.console.log(progressData);\n\n        //public static function signal_game_progress($webglid, $score, $completedlevels, $puzzlesolved) {\n        const score = progressData?.score ? progressData.score : 0;\n        const completedLevels = progressData?.completedLevels ? progressData.completedLevels : 0;\n        const puzzleSolved = progressData?.puzzleSolved ? 1 : 0;\n\n        const response = await fetchMany([{\n            methodname: 'mod_webgl_signal_game_progress',\n            args: {'webglid': webglid, 'score': score, 'completedlevels': completedLevels, 'puzzlesolved': puzzleSolved}\n        }])[0];\n\n        if (!response) {\n            window.console.error('Error setting webgl ' + webglid + ' progress data');\n        } else {\n            handleCompletionData(response.completiondata);\n            window.console.log(response);\n        }\n\n    };\n\n    const checkWebglIframeLoaded = () => {\n        const unityFrame = $('.webgl-iframe-content-loader iframe');\n        if(unityFrame.length < 1) {\n            // No proper Unity framework installed - maybe page is still loading\n            setTimeout(checkWebglIframeLoaded, 250);\n            return;\n        }\n\n        const unityLoadingBar = unityFrame[0].contentDocument.querySelector(\"#unity-loading-bar\");\n        if (!unityLoadingBar) {\n            // No proper Unity framework installed - maybe page is still loading\n            setTimeout(checkWebglIframeLoaded, 250);\n            return;\n        }\n\n        const loadingBarStyle = unityLoadingBar.style.display;\n\n        // Unity loading bar still visible - game still not played\n        if (loadingBarStyle != 'none') {\n            setTimeout(checkWebglIframeLoaded, 250);\n            return;\n        }\n\n        // Unity game loaded - track activity as viewed\n        window.console.error('Game loaded, track it');\n        setGameLoaded();\n    };\n\n    window.mod_webgl_plugin.trackGameViewed = setGameLoaded;\n    window.mod_webgl_plugin.trackGameProgress = setGameProgress;\n\n    window.mod_webgl_plugin.initted = true;\n\n    // Listen for events triggered by Webgl components (alternative to mod_webgl_plugin API)\n    window.addEventListener(\"gameLoaded\", () => {\n        window.console.log(\"gameLoaded event received\");\n        setGameLoaded();\n    });\n\n    window.addEventListener(\"gameProgress\", (event) => {\n        window.console.log(\"gameProgress event received:\", event.detail);\n        // Gestisci il progresso del gioco qui\n        setGameProgress(event.detail);\n    });\n\n    // Listen for toggled manual completion states of activities.\n    document.addEventListener(CourseEvents.manualCompletionToggled, (e) => {\n        const withAvailability = parseInt(e.detail.withAvailability);\n        if (!withAvailability && e.detail.completed) {\n            // In case of availability params, this state is already handled by core\n            // Otherwise, if the course is flagged as completed, it shows the game completed dialog\n            showGameCompleteDialog();\n        }\n    });\n\n    // Autodetect game loaded\n    checkWebglIframeLoaded();\n\n    // Listen for events triggered inside the Webgl game\n    const unityFrame = $('.webgl-iframe-content-loader iframe');\n    if(unityFrame.length) {\n        const iframe = unityFrame[0];\n        iframe.addEventListener('load', () => {\n            const iframeWindow = iframe.contentWindow;\n\n            iframeWindow.addEventListener(\"gameLoaded\", () => {\n                window.console.log(\"gameLoaded event received from Webgl frame\");\n                setGameLoaded();\n            });\n\n            iframeWindow.addEventListener(\"gameProgress\", (event) => {\n                window.console.log(\"gameProgress event received from Webgl frame:\", event.detail);\n                // Gestisci il progresso del gioco qui\n                setGameProgress(event.detail);\n            });\n        });\n    }\n};"],"names":["window","mod_webgl_plugin","initted","trackGameViewed","trackGameProgress","showGameCompleteDialog","async","modalbacktocourse","ModalSaveCancel","create","title","body","buttons","cancel","save","getRoot","off","on","ModalEvents","submit","show","handleCompletionData","activityInfosBlock","length","renderObject","Templates","renderForPromise","completiondata","replaceNode","html","js","overallcomplete","setGameLoaded","webglid","data","response","methodname","args","console","log","error","setGameProgress","progressData","score","completedLevels","puzzleSolved","checkWebglIframeLoaded","unityFrame","setTimeout","unityLoadingBar","contentDocument","querySelector","style","display","addEventListener","event","detail","document","CourseEvents","manualCompletionToggled","e","parseInt","withAvailability","completed","iframe","iframeWindow","contentWindow"],"mappings":"8hDAqBAA,OAAOC,iBAAmB,CACtBC,SAAS,EACTC,gBAAiB,OACjBC,kBAAmB,sBAUH,WACVC,uBAAyBC,gBACrBC,wBAA0BC,2BAAgBC,OAAO,CACnDC,OAAO,mBAAU,qBAAsB,aACvCC,MAAM,mBAAU,yBAA0B,aAC1CC,QAAS,CACLC,QAAQ,mBAAU,2BAA4B,aAC9CC,MAAM,mBAAU,yBAA0B,gBAMlDP,kBAAkBQ,UAAUC,IAAI,SAEhCT,kBAAkBQ,UAAUE,GAAGC,sBAAYJ,MAAM,yBAC3C,yBAAyBK,YAE/BZ,kBAAkBa,QAGhBC,qBAAuBf,MAAAA,uBAEnBgB,oBAAqB,mBAAE,4BACzBA,mBAAmBC,OAAQ,OACrBC,mBAAqBC,mBAAUC,iBAAiB,4BAA6BC,sBAC7EF,mBAAUG,YAAYN,mBAAmB,GAAIE,aAAaK,KAAML,aAAaM,IAGnFH,eAAeI,iBACf1B,0BAOF2B,cAAgB1B,gBACZ2B,SAAU,mBAAE,gCAAgCC,KAAK,SAEjDC,eAAiB,cAAU,CAAC,CAC9BC,WAAY,+BACZC,KAAM,SAAYJ,YAClB,GAECE,UAGDd,qBAAqBc,SAASR,gBAC9B3B,OAAOsC,QAAQC,IAAIJ,WAHnBnC,OAAOsC,QAAQE,MAAM,uBAAyBP,QAAU,eAa1DQ,gBAAkBnC,MAAAA,qBACd2B,SAAU,mBAAE,gCAAgCC,KAAK,SACvDlC,OAAOsC,QAAQC,IAAI,gCACnBvC,OAAOsC,QAAQC,IAAIG,oBAGbC,MAAQD,MAAAA,cAAAA,aAAcC,MAAQD,aAAaC,MAAQ,EACnDC,gBAAkBF,MAAAA,cAAAA,aAAcE,gBAAkBF,aAAaE,gBAAkB,EACjFC,aAAeH,MAAAA,cAAAA,aAAcG,aAAe,EAAI,EAEhDV,eAAiB,cAAU,CAAC,CAC9BC,WAAY,iCACZC,KAAM,SAAYJ,cAAkBU,sBAA0BC,6BAAiCC,iBAC/F,GAECV,UAGDd,qBAAqBc,SAASR,gBAC9B3B,OAAOsC,QAAQC,IAAIJ,WAHnBnC,OAAOsC,QAAQE,MAAM,uBAAyBP,QAAU,mBAQ1Da,uBAAyB,WACrBC,YAAa,mBAAE,0CAClBA,WAAWxB,OAAS,cAEnByB,WAAWF,uBAAwB,WAIjCG,gBAAkBF,WAAW,GAAGG,gBAAgBC,cAAc,0BAC/DF,4BAEDD,WAAWF,uBAAwB,KAOhB,QAHCG,gBAAgBG,MAAMC,SAS9CrD,OAAOsC,QAAQE,MAAM,yBACrBR,iBANIgB,WAAWF,uBAAwB,MAS3C9C,OAAOC,iBAAiBE,gBAAkB6B,cAC1ChC,OAAOC,iBAAiBG,kBAAoBqC,gBAE5CzC,OAAOC,iBAAiBC,SAAU,EAGlCF,OAAOsD,iBAAiB,cAAc,KAClCtD,OAAOsC,QAAQC,IAAI,6BACnBP,mBAGJhC,OAAOsD,iBAAiB,gBAAiBC,QACrCvD,OAAOsC,QAAQC,IAAI,+BAAgCgB,MAAMC,QAEzDf,gBAAgBc,MAAMC,WAI1BC,SAASH,iBAAiBI,aAAaC,yBAA0BC,KACpCC,SAASD,EAAEJ,OAAOM,mBAClBF,EAAEJ,OAAOO,WAG9B1D,4BAKRyC,+BAGMC,YAAa,mBAAE,0CAClBA,WAAWxB,OAAQ,OACZyC,OAASjB,WAAW,GAC1BiB,OAAOV,iBAAiB,QAAQ,WACtBW,aAAeD,OAAOE,cAE5BD,aAAaX,iBAAiB,cAAc,KACxCtD,OAAOsC,QAAQC,IAAI,8CACnBP,mBAGJiC,aAAaX,iBAAiB,gBAAiBC,QAC3CvD,OAAOsC,QAAQC,IAAI,gDAAiDgB,MAAMC,QAE1Ef,gBAAgBc,MAAMC"}